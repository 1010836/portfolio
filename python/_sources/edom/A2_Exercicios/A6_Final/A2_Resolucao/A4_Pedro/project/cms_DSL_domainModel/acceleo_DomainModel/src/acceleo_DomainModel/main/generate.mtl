[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://org/eclipse/dsl/entity')]


[template public generateElement(aClass : Entity)]

[comment Model Class @main /]
[file (aClass.Name.toLowerCase() + '/' +aClass.Name+'.java', false, 'UTF-8')]
package [aClass.Name.toLowerFirst()/];

public class [aClass.Name/] {
   	[for (a: Attribute | aClass.attributes) separator('\n')]
    private [a.Type/] [a.Name/];
   	[/for]

	[for (r: Relation | aClass.relations) separator('\n')]
	[if r.Type.toString().strcmp('many') = 0]
	private ArrayList<[r.RelEntity.Name/]> [r.Name/];
	[else]
	private [r.RelEntity.Name + ' ' + r.Name/];
	[/if]
   	[/for]

	private [aClass.Name+'Details'/] details;

	public [aClass.Name + 'Details'/] getLightWeight[aClass.Name/]() {
		return details;
	}

}
[/file]

[comment Detail Class @main /]
[file (aClass.Name.toLowerCase() + '/' + aClass.Name+'Details.java', false, 'UTF-8')]
package [aClass.Name.toLowerFirst()/];

public class [aClass.Name+'Details'/] {
  
   	private String id;

	private String displayName;

}
[/file]

[comment Service Interface Class @main /]
[file (aClass.Name.toLowerCase() + '/' + aClass.Name+'sService.java', false, 'UTF-8')]
package [aClass.Name.toLowerFirst()/];

import java.util.ArrayList;

interface [aClass.Name + 'sService'/] {
	
	[aClass.Name/] add[aClass.Name/]([aClass.Name + ' ' +  aClass.Name.toLowerFirst()/]);

	Boolean delete[aClass.Name/](String id);

	ArrayList<[aClass.Name +'Details'/]> delete[aClass.Name + 's' /](ArrayList<String> ids);

	ArrayList<[aClass.Name +'Details'/]> get[aClass.Name + 'Details' /]();

	[aClass.Name/] get[aClass.Name/](String id);

	[aClass.Name/] update[aClass.Name/]([aClass.Name + ' ' + aClass.Name.toLowerFirst()/]);

}
[/file]

[comment Service Interface Async @main /]
[file (aClass.Name.toLowerCase() + '/' + aClass.Name+'sServiceAsync.java', false, 'UTF-8')]
package [aClass.Name.toLowerFirst()/];

import com.google.gwt.user.client.rpc.AsyncCallback;

import java.util.ArrayList;

interface [aClass.Name + 'sServiceAsync'/] {
	
	void add[aClass.Name/]([aClass.Name + ' ' +  aClass.Name.toLowerFirst()/], AsyncCallback<[aClass.Name/]> callback);

	void delete[aClass.Name/](String id, AsyncCallback<Boolean> callback);

	void delete[aClass.Name + 's' /](ArrayList<String> ids, AsyncCallback<ArrayList<[aClass.Name + 'Details'/]>> callback);

	void get[aClass.Name + 'Details' /](AsyncCallback<ArrayList<[aClass.Name + 'Details'/]>> callback);

	void get[aClass.Name/](String id, AsyncCallback<[aClass.Name/]> callback);

	void update[aClass.Name/]([aClass.Name + ' ' + aClass.Name.toLowerFirst()/], AsyncCallback<[aClass.Name/]> callback);

}
[/file]

[comment Service Implement Class @main /]
[file (aClass.Name.toLowerCase() + '/' + aClass.Name+'sServiceImpl.java', false, 'UTF-8')]
package [aClass.Name.toLowerFirst()/];

import java.util.ArrayList;

public class [aClass.Name + 'sServiceImpl'/] implements [aClass.Name + 'sService'/] {
	private ArrayList<[aClass.Name/]> [aClass.Name.toLowerFirst() + 's'/];
	
	public [aClass.Name/] add[aClass.Name/]([aClass.Name + ' ' +  aClass.Name.toLowerFirst()/]) {
		return [aClass.Name.toLowerFirst()/];
	}

	public Boolean delete[aClass.Name/](String id) {
		return true;
	}

	public ArrayList<[aClass.Name +'Details'/]> delete[aClass.Name + 's' /](ArrayList<String> ids) {
		return null;
	}

	public ArrayList<[aClass.Name +'Details'/]> get[aClass.Name + 'Details' /]() {
		return null;
	}

	public [aClass.Name/] get[aClass.Name/](String id) {
		return null;
	}

	public [aClass.Name/] update[aClass.Name/]([aClass.Name + ' ' + aClass.Name.toLowerFirst()/]) {
		return [aClass.Name.toLowerFirst()/];
	}

}
[/file]

[comment Presenter Class @main /]
[file (aClass.Name.toLowerCase() + '/' + aClass.Name+'sPresenter.java', false, 'UTF-8')]
package [aClass.Name.toLowerFirst()/];

public class [aClass.Name + 'sPresenter'/] {
	
	public interface Display {

	}

	public void deleteSelected[aClass.Name/]() {

	}
}
[/file]

[comment View @main /]
[file (aClass.Name.toLowerCase() + '/' + aClass.Name+'sView.java', false, 'UTF-8')]
package [aClass.Name.toLowerFirst()/];

public class [aClass.Name + 'sView'/] implements [aClass.Name/]sPresenter.Display {
	
}
[/file]


[/template]
